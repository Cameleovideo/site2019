<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContactResource1.Text" xml:space="preserve">
    <value>You don't find ?</value>
  </data>
  <data name="ContactResource2.Text" xml:space="preserve">
    <value>Contact us.</value>
  </data>
  <data name="lblDefinition.Text" xml:space="preserve">
    <value>Definitions</value>
  </data>
  <data name="lblHowTo.Text" xml:space="preserve">
    <value>How to import your photos</value>
  </data>
  <data name="lblImportant.Text" xml:space="preserve">
    <value>Important things</value>
    <comment>Éléments importants</comment>
  </data>
  <data name="lblImportant1.Text" xml:space="preserve">
    <value>It is possible that the printed pictures will be different than the original pictures. Printed pictures can be cropped because digital pictures are not necessarely in the same format than the printed format (for example: printing a 5X7 from a 8X10 file). Our technicians will do their best to print  your pictures correctly. The resolution of the digital file is also important. Your picture need a minimum of quality to be printed. </value>
    <comment>Il est possible que vos photos imprimées soient légèrement différentes des photos originales. Vos photos sont coupées car les photos numériques n'ont pas nécessairement les mêmes proportions que le format d'impression choisi (ex: impression d'un 5X7 à partir d'une photo en format 8X12). Les photos doivent donc être ajustées pour avoir la même taille que le papier sur lequel elles sont imprimées. Nos techniciens feront tout en leur possible pour imprimer les photos de la meilleure façon possible.

La résolution du fichier numérique est aussi un facteur important. Il faut que les photos aient une qualité suffisante pour être imprimée.</comment>
  </data>
  <data name="lblImportant2.Text" xml:space="preserve">
    <value>Pictures that do not meet these requirements will not be printed. Customer service will contact you if the pictures can't be printed.</value>
    <comment>Les photos qui n'ont pas une résolution satisfaisante ou qui ne peuvent être recadrées correctement ne seront pas imprimées. Un agent du service communiquera alors avec vous.</comment>
  </data>
  <data name="lblPixels.Text" xml:space="preserve">
    <value>Pixel</value>
  </data>
  <data name="lblPixelsDef.Text" xml:space="preserve">
    <value>Unit of measure for one point on an image.</value>
    <comment>Unité de mesure qui défini un point sur une image.</comment>
  </data>
  <data name="lblResolution.Text" xml:space="preserve">
    <value>Resolution</value>
  </data>
  <data name="lblResolutionDef.Text" xml:space="preserve">
    <value>Number of pixel by unit of measure.</value>
  </data>
  <data name="lblStep1.Text" xml:space="preserve">
    <value>Click on "Online printing service"</value>
  </data>
  <data name="lblStep2.Text" xml:space="preserve">
    <value>Create a new album.</value>
    <comment>Créer un nouvel album</comment>
  </data>
  <data name="lblStep3.Text" xml:space="preserve">
    <value>Click &lt;b&gt;Edit&lt;/b&gt; on that new album.</value>
    <comment>Cliquer sur le nouvel album</comment>
  </data>
  <data name="lblStep4.Text" xml:space="preserve">
    <value>Import personal photos with the button.</value>
    <comment>Importer les photos personnelles avec le bouton.</comment>
  </data>
  <data name="lblToKnow.Text" xml:space="preserve">
    <value>Before uploading...</value>
  </data>
  <data name="lblToKnow1.Text" xml:space="preserve">
    <value>You can upload up to 250 mo of pictures.</value>
  </data>
  <data name="lblToKnow2.Text" xml:space="preserve">
    <value>Pictures will be deleted after 6 monts of inactivity in your account.</value>
    <comment>Les photos seront effacées automatiquement si votre compte est inactif pour une période dépassant 6 mois.</comment>
  </data>
  <data name="lblToKnow3.Text" xml:space="preserve">
    <value>Photos soon to be deleted will be framed in red.</value>
    <comment>Les photos qui seront supprimés prochainement auront un encadré rouge atour.</comment>
  </data>
  <data name="lblToKnow4.Text" xml:space="preserve">
    <value>Photos are 5 mb max.</value>
    <comment>Les photos doivent faire un maximum de 5 mo.</comment>
  </data>
</root>