<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCreateAccountResource1.HoverImageUrl" xml:space="preserve">
    <value>~/Images2/login/enter_account_eng_over.png</value>
  </data>
  <data name="btnCreateAccountResource1.ImageUrl" xml:space="preserve">
    <value>~/Images2/login/enter_account_eng_off.png</value>
  </data>
  <data name="lblAnswer1Resource1.Text" xml:space="preserve">
    <value>From now on, entering an email address and a personal password will be the only way to get access to your account.</value>
  </data>
  <data name="lblAnswer2Resource1.Text" xml:space="preserve">
    <value>The only purpose of these informations is to allow you to import the new session’s photos. You’ll first have to be connected to your account. Then, simply enter the usercard’s informations in the section “Add a Cameleo event” (this section will appear at the right of your screen once you’re connected).</value>
  </data>
  <data name="lblAnswer3Resource1.Text" xml:space="preserve">
    <value>&lt;ul&gt;&lt;li&gt;Have all your Cameleo events in one and the same account&lt;/li&gt;
&lt;li&gt;Merge and manage the Cameleo albums of all your children into this account&lt;/li&gt;
&lt;li&gt;Create your own photo albums by importing your personal images&lt;/li&gt;
&lt;li&gt;Share albums with your loved ones&lt;/li&gt;
&lt;li&gt;Order prints or products from any of your photos&lt;/li&gt;
&lt;li&gt;Mark backgrounds and products as your favorites&lt;/li&gt;
&lt;li&gt;And much more!&lt;/li&gt;&lt;/ul&gt;</value>
  </data>
  <data name="lblConfirmPasswordResource1.Text" xml:space="preserve">
    <value>Re-enter your password to confirm it</value>
  </data>
  <data name="lblCreateAccount2Resource1.Text" xml:space="preserve">
    <value>YOUR ACCOUNT</value>
  </data>
  <data name="lblCreateAccountResource1.Text" xml:space="preserve">
    <value>PLEASE CREATE </value>
  </data>
  <data name="lblEmailResource1.Text" xml:space="preserve">
    <value>Enter your email</value>
  </data>
  <data name="lblLoginHeaderResource1.Text" xml:space="preserve">
    <value>You don't have an account?</value>
  </data>
  <data name="lblNoEmailAnswerResource1.Text" xml:space="preserve">
    <value>Contact our customer service that will be glad to assist you.</value>
  </data>
  <data name="lblNoEmailResource1.Text" xml:space="preserve">
    <value>You don't have a valid email address?</value>
  </data>
  <data name="lblPasswordResource1.Text" xml:space="preserve">
    <value>Create your personal password</value>
  </data>
  <data name="lblQuestion1Resource1.Text" xml:space="preserve">
    <value>Why do you need to create an account?</value>
  </data>
  <data name="lblQuestion2Resource1.Text" xml:space="preserve">
    <value>How and when do you have to use the username and the password provided on the usercard you received?</value>
  </data>
  <data name="lblQuestion3Resource1.Text" xml:space="preserve">
    <value>What are the benefits of having an account?</value>
  </data>
  <data name="revEmailResource1.ErrorMessage" xml:space="preserve">
    <value>Invalid address.</value>
  </data>
  <data name="rfvConfirmPasswordResource1.ErrorMessage" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="rfvEmailResource1.ErrorMessage" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="rfvPasswordResource1.ErrorMessage" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="txtResultResource1.ErrorConfirm" xml:space="preserve">
    <value>The password and confirmation mus be identical.</value>
  </data>
</root>