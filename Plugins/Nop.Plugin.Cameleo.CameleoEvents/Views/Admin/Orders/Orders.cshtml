@using Nop.Plugin.Cameleo.CameleoEvents.ViewModels;
@using Nop.Plugin.Cameleo.CameleoEvents.Domain;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@using Nop.Admin.Models.Orders;

@model OrderListViewModel

@{
    //Layout
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    //title
    Html.AddTitleParts(T("pagetitle.cameleoeventdetails.orders").Text);

    //CSS
    Html.AddCssFileParts("~/Plugins/Cameleo.CameleoEvents/Content/styles.css");

    var gridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
}

@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-configuration.png")" alt="" />
            @T("Plugins.Cameleo.CameleoEvents.EventDetails.Orders") @Html.ActionLink("(" + T("Plugins.Cameleo.CameleoEvents.BackToList") + ")", "ConfigureEvents", "EventAdmin")
        </div>
        <div class="options">                
            <a href="@Url.Action("ExportExcelAll")" class="k-button">@T("Admin.Common.ExportToExcel.All")</a>
            <input type="button" id="exportexcel-selected" class="k-button" value="@T("Admin.Common.ExportToExcel.Selected")" />        
        </div>
    </div>

    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.StartDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.StartDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.EndDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.EndDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CustomerEmail):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerEmail)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.OrderStatusId):
            </td>
            <td class="adminData">
                @Html.DropDownList("OrderStatusId", Model.AvailableOrderStatuses)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.PaymentStatusId):
            </td>
            <td class="adminData">
                @Html.DropDownList("PaymentStatusId", Model.AvailablePaymentStatuses)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.ShippingStatusId):
            </td>
            <td class="adminData">
                @Html.DropDownList("ShippingStatusId", Model.AvailableShippingStatuses)
            </td>
        </tr>               
        <tr>
            <td colspan="2">
                <input type="button" id="btnSearch" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    
     <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                <div id="orders-grid"></div>

                <script id="command-template" type="text/x-kendo-template">                    
                    # if(ShowRefund) { #
                        <a class="k-button k-grid-order" onclick="Refund(#= Id #)">Refund</a>
                    # } if(ShowCancel) { #
                        <a class="k-button k-grid-order" onclick="Cancel(#= Id #)">Cancel</a>
                    # } if(ShowPaid) { #
                        <a class="k-button k-grid-order" onclick="Paid(#= Id #)">Paid</a>
                    # } #
                </script>

                <script>
                    $(document).ready(function() {
                        $("#orders-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("OrderList", "EventAdmin"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },                                
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(gridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            dataBound: onDataBound,
                            columns: [
                                {
                                    field: "Id",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                    width: 50
                                },
                                {
                                    field: "Id",
                                    title: "@T("Admin.Orders.Fields.ID")",
                                    width: 50,                                    
                                    template: "# if(CanEditOrder) {# <a href='@Url.Content("~/Admin/Order/Edit/")#=Id#' target='_blank'>#= Id #</a> #} else {# #=Id# #}#"
                                },
                                {
                                    field: "OrderStatus",
                                    title: "@T("Admin.Orders.Fields.OrderStatus")"
                                },
                                {
                                    field: "PaymentStatus",
                                    title: "@T("Admin.Orders.Fields.PaymentStatus")"
                                },
                                {
                                    field: "Id",
                                    title: " ",
                                    template: $("#command-template").html() 
                                },
                                {
                                    field: "ShippingStatus",
                                    title: "@T("Admin.Orders.Fields.ShippingStatus")"
                                },
                                {
                                    field: "CreatedOn",
                                    title: "@T("Admin.Orders.Fields.CreatedOn")",
                                    type: "date",
                                    format: "{0:G}"
                                },
                                {
                                    field: "CustomerEmail",
                                    title: "@T("Admin.Orders.Fields.Customer")",    
                                    template: '<a href="@Url.Content("~/Admin/Customer/Edit/")#=CustomerId#" target="_blank">#=CustomerFullName# (#=CustomerEmail#)</a>'
                                },
                                {
                                    field: "StoreName",
                                    title: "@T("Admin.Orders.Fields.Store")"
                                }, 
                                {
                                    field: "Id",
                                    title: "@T("Plugins.Cameleo.CameleoEventUsers.Fields.Name").Text",
                                    template: "#=createAsync(data)#"
                                },
                                {
                                    field: "EventIds",
                                    title: "EventId"
                                },
                                {
                                    field: "EventCodes",
                                    title: "@T("Plugins.Cameleo.CameleoEvents.Fields.EventCode")"
                                },
                                {
                                    field: "ClientNames",
                                    title: "@T("Plugins.Cameleo.CameleoEvents.Fields.ClientName")"
                                },
                                {
                                    field: "OrderTotal",
                                    title: "@T("Admin.Orders.Fields.OrderTotal")"
                                }
                            ]
                        } );
                    });

                    //Put additionnal pager on top of the grid
                    $(function ()
                    {
                        var grid = $("#orders-grid").data("kendoGrid");
                        var wrapper = $('<div class="k-pager-wrap k-grid-pager pagerTop"/>').insertBefore(grid.element.children("table"));
                        grid.pagerTop = new kendo.ui.Pager(wrapper, $.extend({}, grid.options.pageable, { dataSource: grid.dataSource }));
                        grid.element.height("").find(".pagerTop").css("border-width", "0 0 1px 0");
                    });

                    function createAsync(dataitem){                                        
                        $.ajax({
                            url: "@(Url.Action("CustomerEventSubjectNameForOrder", "CustomerEvent"))",
                            data: { orderId : dataitem.Id },
                        async: true,
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert(thrownError);
                        },
                        success: function(response) {
                            // The AJAX request succeeded and the result variable
                            // will contain the partial HTML returned by the action
                            // we inject it into the div:
                            $("#async_" + dataitem.Id).html(response);                                
                        }
                    });  

                    //return container with id generated from current model ID field
                    return "<div id='async_" + dataitem.Id + "'> </div>"
                    }               

                    var selectedIds = [];                    

                    $(document).ready(function () {

                        //search button
                        $('#btnSearch').click(function () {
                            //search
                            var grid = $('#orders-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            grid.dataSource.read();
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });                        

                        $("#@Html.FieldIdFor(model => model.CustomerEmail)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#btnSearch").click();
                                return false;
                            }
                        });   
                        
                        //"Export Excel selected" button
                        $('#exportexcel-selected').click(function (e) {
                            e.preventDefault();
                            //redirect to required URL
                            setLocation('@(Url.Action("ExportExcelSelected", "EventAdmin"))?selectedIds=' + selectedIds.join(","));
                            return false;
                        });

                        $('#mastercheckbox').click(function () {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#orders-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            }
                            else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function (item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });

                    function additionalData() {
                        return {
                            StartDate: $('#@Html.FieldIdFor(model => model.StartDate)').val(),
                            EndDate: $('#@Html.FieldIdFor(model => model.EndDate)').val(),
                            CustomerEmail: $('#@Html.FieldIdFor(model => model.CustomerEmail)').val(),
                            OrderStatusId: $('#@Html.FieldIdFor(model => model.OrderStatusId)').val(),
                            PaymentStatusId: $('#@Html.FieldIdFor(model => model.PaymentStatusId)').val(),
                            ShippingStatusId: $('#@Html.FieldIdFor(model => model.ShippingStatusId)').val()
                        };
                    }

                    function onDataBound(e) {

                        $('#orders-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                            var currentId = $(this).val();
                            var checked = jQuery.inArray(currentId, selectedIds);
                            //set checked based on if current checkbox's value is in selectedIds.
                            $(this).attr('checked', checked > -1);
                        });

                        updateMasterCheckbox();

                    }
                    
                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#orders-grid input[type=checkbox][id!=mastercheckbox]').length;
                        var numChkBoxesChecked = $('#orders-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }

                    function Refund(e) {                         
                        $.ajax({
                            url: "@(Url.Action("RefundOrder", "EventAdmin"))",
                            data: { orderId : e },
                            async: true,
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert(thrownError);
                            },
                            success: function(response) {  
                                $("#orders-grid").data("kendoGrid").dataSource.read();
                            }
                        });
                    }

                    function Cancel(e) {                         
                        $.ajax({
                            url: "@(Url.Action("CancelOrder", "EventAdmin"))",
                            data: { orderId : e },
                            async: true,
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert(thrownError);
                            },
                            success: function(response) {  
                                $("#orders-grid").data("kendoGrid").dataSource.read();
                            }
                        });
                    }

                    function Paid(e) {                         
                        $.ajax({
                            url: "@(Url.Action("PaidOrder", "EventAdmin"))",
                            data: { orderId : e },
                            async: true,
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert(thrownError);
                            },
                            success: function(response) {  
                                $("#orders-grid").data("kendoGrid").dataSource.read();
                            }
                        });
                    }
                </script>
            </td>
        </tr>
    </table>

    
}
    